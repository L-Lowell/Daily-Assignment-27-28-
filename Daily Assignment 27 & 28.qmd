---
title: "Final assignment"
format: html
editor: visual
---

```{r}
#1: Extract all waterways from OpenStreetMap for the Bounding Box of Fort Collins, CO
library(osmdata)
library(sf)

# remotes::install_github("mikejohnson51/AOI")
fc = AOI::geocode("Fort Collins", bbox = TRUE)

library(osmdata)
#> Data (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright

osm = opq(st_bbox(st_transform(fc, 4326))) |>
  add_osm_feature(key = "waterway", value = "river") |>
  osmdata_sf()

```



```{r}
#2: Filter the osm_lines object to only include the Cache la Poudre River and merge the lines into a single line object with st_union(). Convert the object to a sf object with st_as_sf() when done.

#2: Filter for Cache la Poudre River, merge, convert

# Only keep lines with name "Cache la Poudre River"
poudre = osm$osm_lines %>%
  filter(grepl("Cache", name, ignore.case = TRUE))

# Combine all lines into one
river_merged = sf::st_union(poudre)

# Make it an sf object again
river_merged = sf::st_as_sf(poudre)

```


```{r}
#3: Use st_length() to compute the length of the river for future calculations
river_length <- st_length(river_merged)%>%
  print()
```

```{r}
#4: Use st_cast() to convert the river object to a POINT object and save it as poudre_pts for later extraction tasks
# Convert the river object to points for extraction later
poudre_pts <- st_cast(river_merged, "POINT")

```

```{r}
#5: Use the rast() function to read in the DEM file from the lynker-spatial S3 bucket shared in the last assignment. Be sure to use the vsis3 prefix!

library(terra)

# Make a VSI-compatible URL for raster access
url <- "/vsicurl/https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/foco-elev-cm.tif"

# Load the raster
dem <- rast(url)


```

```{r}
#6: Use the extract() function to extract the elevation values from the DEM at the points along the river


poudre_pts_proj <- st_transform(poudre_pts, crs(dem))

poudre_vect <- vect(poudre_pts_proj)

elevation_values <- extract(dem, poudre_vect)

elevation_values <- elevation_values["dem"]
colnames(elevation_values) <- "elevation_cm"

river_profile <- bind_cols(st_coordinates(poudre_pts_proj), elevation_values)

```

```{r}
#7: Use bind_cols() to combine the spatial river points with the extracted elevation values

river_profile <- bind_cols(st_coordinates(poudre_pts_proj), elevation_values)

str(river_profile)

```

```{r}
#8: Use mutate() to add a new column called ID that is a sequence from 1 to the number of points in the river (n())
library(dplyr)

# Add an ID column for later use (sequence of points)
river_profile <- river_profile %>%
  mutate(ID = row_number())


```

```{r}
#9: Use the st_distance() function to compute the straight-line distance between the first and last points in the river
# Compute straight-line distance between the first and last points

straight_line_distance <- st_distance(st_startpoint(poudre_pts), st_endpoint(poudre_pts))

```

```{r}
#10: Divide the length of the full river (step 3) by this straight-line distance to get the sinuosity. Report the value and what it means. Does this value make sense with respect to the complete Poudre River?
# Sinuosity calculation: river length / straight-line distance
sinuosity <- river_length / straight_line_distance

```

```{r}
#11: The slope of a river is the change in elevation between the inlet and outlet divided by the length of the river. Compute this value and report it. Remember the units of the elevation (cm) and of your length!
# Calculate the change in elevation (max - min elevation along the river)
elevation_change <- max(river_profile$elevation) - min(river_profile$elevation)

# Compute slope (elevation change / river length)
slope <- elevation_change / river_length

# Report the slope value
slope

```

```{r}
#12: Use ggplot() to create a line plot of the elevation values along the river. Be sure to use the ID column as the x-axis and the dem column as the y-axis. Add nice labels and themes to your chart
library(ggplot2)

# Plot the river profile (elevation along the river)
ggplot(river_profile, aes(x = ID, y = elevation)) +
  geom_line() +
  labs(title = "Elevation Profile of Cache la Poudre River",
       x = "Point ID", y = "Elevation (m)") +
  theme_minimal()

```

